esphome:
  name: ${device_name}
  includes:
    - devices/gosund_sw2_output.h
    - devices/gosund_sw2_uart.h
esp8266:
  board: esp8285

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_timeout: 0s

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ESPHome ${friendly_name}
    password: !secret fallback_ap_password

captive_portal:

# Disable logging via the UART
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key
  reboot_timeout: 0s

ota:
  platform: esphome
  password: !secret ota_password

external_components:
  - source:
      type: git
      url: https://github.com/robertklep/esphome-custom-component
    components: [ custom, custom_component ]
# Thank you, Robert!

globals:
  id: set_by_touch
  type: bool

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO4
      inverted: true
    id: button
    on_press:
      - light.toggle: ${device_name}
    on_click:
      min_length: 5s
      max_length: 10s
      then:
        - switch.turn_on: ${device_name}_restart

switch:
  - platform: restart
    name: Reboot ${friendly_name}
    id: ${device_name}_restart

uart:
  id: uart_bus
  baud_rate: 115200
  tx_pin: GPIO1
  rx_pin: GPIO3

power_supply:
  - id: green_led
    pin:
      number: GPIO13
      inverted: true
    enable_time: 0s
    keep_on_time: 0s

output:
  - platform: custom
    type: float
    lambda: |-
      auto float_out = new GosundSW2Output();
      App.register_component(float_out);
      return {float_out};
    outputs:
      - id: dimmer
        power_supply: green_led
      
light:
  - platform: monochromatic
    name: ${friendly_name}
    id: ${device_name}
    output: dimmer
    gamma_correct: 1.0
    default_transition_length: 0s

custom_component:
  - lambda: |-
      auto uart_out = new GosundSW2Uart(id(uart_bus), id(${device_name}));
      return {uart_out};
    
status_led:
  pin:
    number: GPIO12
    inverted: true

text_sensor:
# Expose ESPHome version as sensor.
  - platform: version
    name: ${friendly_name} ESPHome Version
    
  - platform: wifi_info
    ip_address:
      name: ${friendly_name} IP Address
    ssid:
      name: ${friendly_name} SSID
    bssid:
      name: ${friendly_name} BSSID
      
sensor:
# Uptime sensor.
  - platform: uptime
    name: ${friendly_name} Uptime
# WiFi Signal sensor.
  - platform: wifi_signal
    name: ${friendly_name} WiFi Signal
    filters:
      - delta: 0.01
      - throttle: 60s