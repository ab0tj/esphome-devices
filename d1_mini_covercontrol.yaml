esphome:
  name: ${device_name}
  platform: ESP8266
  board: d1_mini
  on_boot:
      then:
        - if:
            condition:
              - binary_sensor.is_on: door_open
            then:
              - cover.template.publish:
                  id: door_cover
                  position: 1.0
            else:
              - if:
                  condition:
                    - binary_sensor.is_on: door_closed
                  then:
                    - cover.template.publish:
                        id: door_cover
                        position: 0.0
                  else:
                    - cover.template.publish:
                        id: door_cover
                        position: 0.5

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ESPHome ${friendly_name}
    password: !secret fallback_ap_password

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret api_password

ota:
  platform: esphome
  password: !secret ota_password
  
dallas:
  pin: D2
  update_interval: 3s

sensor:
  - platform: dallas
    name: ${friendly_name} Temperature
    index: 0
    filters:
    # Median filter to toss out the obviously incorrect readings that happen sometimes
    - median:
        window_size: 5
        send_every: 5
    # Only send value when it changes
    - delta: 0.01
  # Uptime sensor.
  - platform: uptime
    name: ${friendly_name} Uptime
# WiFi Signal sensor.
  - platform: wifi_signal
    name: ${friendly_name} WiFi Signal
    filters:
    - delta: 0.01
    - throttle: 60s

binary_sensor:
  - platform: gpio
    id: door_open
    pin:
      number: D3
      inverted: true
    on_state:
      then:
        - if:
            condition:
              - binary_sensor.is_on: door_open
            then:
              - cover.template.publish:
                  id: door_cover
                  position: 1.0
            else:
              - cover.template.publish:
                  id: door_cover
                  position: 0.5
  - platform: gpio
    id: door_closed
    pin:
      number: D8
      inverted: true
    on_state:
      then:
        - if:
            condition:
              - binary_sensor.is_on: door_closed
            then:
              - cover.template.publish:
                  id: door_cover
                  position: 0.0
            else:
              - cover.template.publish:
                  id: door_cover
                  position: 0.5
  - platform: status
    name: ${friendly_name} Status

# Exposed switches.
# Switch to restart the sensor.   
switch:
  - platform: restart
    name: ${friendly_name} Restart
  - platform: gpio
    pin: D1
    id: door_relay
    restore_mode: ALWAYS_OFF
      
cover:
  - platform: template
    name: ${friendly_name}
    id: door_cover
    device_class: garage
    has_position: true
    open_action:
      - switch.turn_on: door_relay
      - delay: 0.1s
      - switch.turn_off: door_relay
    close_action:
      - switch.turn_on: door_relay
      - delay: 0.1s
      - switch.turn_off: door_relay
    stop_action:
      - switch.turn_on: door_relay
      - delay: 0.1s
      - switch.turn_off: door_relay

text_sensor:
# Expose ESPHome version as sensor.
  - platform: version
    name: ${friendly_name} ESPHome Version
    
  - platform: wifi_info
    ip_address:
      name: ${friendly_name} IP Address
    ssid:
      name: ${friendly_name} SSID
    bssid:
      name: ${friendly_name} BSSID