esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp8285

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_timeout: 0s

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ESPHome ${friendly_name}
    password: !secret fallback_ap_password

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret api_password
  reboot_timeout: 0s

ota:
  platform: esphome
  password: !secret ota_password

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      inverted: true
    id: button
    on_press:
      - light.toggle: ${device_name}
    on_click:
      min_length: 5s
      max_length: 10s
      then:
        - switch.turn_on: ${device_name}_restart
    filters:
      - delayed_off: 250ms

switch:
  - platform: restart
    name: Reboot ${friendly_name}
    id: ${device_name}_restart

power_supply:
  - id: green_led
    pin:
      number: GPIO1
      inverted: true
    enable_time: 0s
    keep_on_time: 0s

output:
  - platform: gpio
    pin: GPIO14
    id: relay
    power_supply: green_led
      
light:
  - platform: binary
    name: ${friendly_name}
    id: ${device_name}
    output: relay
      
status_led:
  pin:
    number: GPIO16
    inverted: true

text_sensor:
# Expose ESPHome version as sensor.
  - platform: version
    name: ${friendly_name} ESPHome Version
    
  - platform: wifi_info
    ip_address:
      name: ${friendly_name} IP Address
    ssid:
      name: ${friendly_name} SSID
    bssid:
      name: ${friendly_name} BSSID
      
sensor:
# Uptime sensor.
  - platform: uptime
    name: ${friendly_name} Uptime
# WiFi Signal sensor.
  - platform: wifi_signal
    name: ${friendly_name} WiFi Signal
    filters:
      - delta: 0.01
      - throttle: 60s
